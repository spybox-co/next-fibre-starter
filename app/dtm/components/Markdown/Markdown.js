import PropTypes from 'prop-types';
import Head from 'next/head'
import dynamic from 'next/dynamic'
import Image from 'components/Image'
import { MDXProvider } from '@mdx-js/react'
import { Grid, Row } from '@/common-ui/Grid';
// import { Defaultpage } from 'templates/Defaultpage'

import styles from './Markdown.module.scss'

const RowParapraph = ({ children }) => (
    <Row>
      <p className={styles.paragraph}>
        {children}
      </p>
    </Row>
  );

// https://whoisryosuke.com/blog/2020/using-mdx-with-nextjs/
// https://www.theviewport.io/post/using-nextjs-and-nextimage-with-mdx-markdown-processing

const components = { 
  // p: RowParapraph,
  h1: heading => <h1 className={styles.heading1}>{heading.children}</h1>,
  p: paragraph => {
      // ToDo @check if paragraph has children 
      setTimeout(()=> { console.log(paragraph)}, 100)
      const props = paragraph.children.props
      if (props && props.originalType === 'img' && props.parentName === 'p') {
        return <Image overlaySrc={`${props.src}?auto=compress&cs=tinysrgb&dpr=2&w=5`} src={`${props.src}?auto=compress&cs=tinysrgb&dpr=2&w=5000`} alt={props.alt} />
      }
      if (props && props.originalType === 'a') {
        return <a overlaySrc={`${props.src}?auto=compress&cs=tinysrgb&dpr=2&w=5`} src={`${props.src}?auto=compress&cs=tinysrgb&dpr=2&w=5000`} alt={props.alt} />
      }
      return <RowParapraph>{paragraph.children}</RowParapraph>
    }
}




export default function Markdown({ children, className, id, theme, filename }) {
  console.log('the filename', filename)
  const MDXContent = dynamic(() => import(`contents/${filename}`))

  const gridProps = {
    className: className,
    id: id,
    theme: theme,
  }

  return (
    <MDXProvider components={components} >
      <Grid {...gridProps}>
        <MDXContent />
      </Grid>
    </MDXProvider>
  )
}

Markdown.propTypes = {
  filename: PropTypes.string.isRequired,
}




// return (
//   <MDXProvider components={components}>

//       {/* <Head>
//         <title>Contact | Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head> */}
//       <Grid>
//         <h6>
//           Markdown content from wrapper component
//         </h6>
//       </Grid>
//       <Grid theme={theme} >
//         <MDXContent />
//         {children}
//       </Grid>


//   </MDXProvider>
// )